# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := build_managed
### Rules for action "restore_packages":
quiet_cmd_binding_gyp_build_managed_target_restore_packages = ACTION binding_gyp_build_managed_target_restore_packages $@
cmd_binding_gyp_build_managed_target_restore_packages = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p src/CoreCLREmbedding; bash -c "cd src/CoreCLREmbedding && dnu restore"

src/CoreCLREmbedding/project.lock.json: obj := $(abs_obj)
src/CoreCLREmbedding/project.lock.json: builddir := $(abs_builddir)
src/CoreCLREmbedding/project.lock.json: TOOLSET := $(TOOLSET)
src/CoreCLREmbedding/project.lock.json: $(srcdir)/src/CoreCLREmbedding/project.json FORCE_DO_CMD
	$(call do_cmd,binding_gyp_build_managed_target_restore_packages)

all_deps += src/CoreCLREmbedding/project.lock.json
action_binding_gyp_build_managed_target_restore_packages_outputs := src/CoreCLREmbedding/project.lock.json

### Rules for action "compile_coreclr_embed":
quiet_cmd_binding_gyp_build_managed_target_compile_coreclr_embed = ACTION binding_gyp_build_managed_target_compile_coreclr_embed $@
cmd_binding_gyp_build_managed_target_compile_coreclr_embed = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p src/CoreCLREmbedding/bin/$(BUILDTYPE)/dnxcore50; bash -c "cd src/CoreCLREmbedding && dnu build --configuration $(BUILDTYPE)"

src/CoreCLREmbedding/bin/$(BUILDTYPE)/dnxcore50/CoreCLREmbedding.dll: obj := $(abs_obj)
src/CoreCLREmbedding/bin/$(BUILDTYPE)/dnxcore50/CoreCLREmbedding.dll: builddir := $(abs_builddir)
src/CoreCLREmbedding/bin/$(BUILDTYPE)/dnxcore50/CoreCLREmbedding.dll: TOOLSET := $(TOOLSET)
src/CoreCLREmbedding/bin/$(BUILDTYPE)/dnxcore50/CoreCLREmbedding.dll: $(srcdir)/src/CoreCLREmbedding/*.cs $(srcdir)/src/common/*.cs FORCE_DO_CMD
	$(call do_cmd,binding_gyp_build_managed_target_compile_coreclr_embed)

all_deps += src/CoreCLREmbedding/bin/$(BUILDTYPE)/dnxcore50/CoreCLREmbedding.dll
action_binding_gyp_build_managed_target_compile_coreclr_embed_outputs := src/CoreCLREmbedding/bin/$(BUILDTYPE)/dnxcore50/CoreCLREmbedding.dll

### Rules for action "compile_mono_embed":
quiet_cmd_binding_gyp_build_managed_target_compile_mono_embed = ACTION binding_gyp_build_managed_target_compile_mono_embed $@
cmd_binding_gyp_build_managed_target_compile_mono_embed = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p build/$(BUILDTYPE); dmcs -sdk:4.5 -target:exe "-out:build/$(BUILDTYPE)/MonoEmbedding.exe" "src/mono/*.cs" "src/common/*.cs"

build/$(BUILDTYPE)/monoembedding.exe: obj := $(abs_obj)
build/$(BUILDTYPE)/monoembedding.exe: builddir := $(abs_builddir)
build/$(BUILDTYPE)/monoembedding.exe: TOOLSET := $(TOOLSET)
build/$(BUILDTYPE)/monoembedding.exe: $(srcdir)/src/mono/*.cs FORCE_DO_CMD
	$(call do_cmd,binding_gyp_build_managed_target_compile_mono_embed)

all_deps += build/$(BUILDTYPE)/monoembedding.exe
action_binding_gyp_build_managed_target_compile_mono_embed_outputs := build/$(BUILDTYPE)/monoembedding.exe


### Generated for copy rule.
/home/coskun/GitHub/CapCalc/linux/Luncher/src/node_modules/edge/build/$(BUILDTYPE)/CoreCLREmbedding.dll: TOOLSET := $(TOOLSET)
/home/coskun/GitHub/CapCalc/linux/Luncher/src/node_modules/edge/build/$(BUILDTYPE)/CoreCLREmbedding.dll: /home/coskun/GitHub/CapCalc/linux/Luncher/src/node_modules/edge/src/CoreCLREmbedding/bin/$(BUILDTYPE)/dnxcore50/CoreCLREmbedding.dll FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /home/coskun/GitHub/CapCalc/linux/Luncher/src/node_modules/edge/build/$(BUILDTYPE)/CoreCLREmbedding.dll
/home/coskun/GitHub/CapCalc/linux/Luncher/src/node_modules/edge/build/$(BUILDTYPE)/project.json: TOOLSET := $(TOOLSET)
/home/coskun/GitHub/CapCalc/linux/Luncher/src/node_modules/edge/build/$(BUILDTYPE)/project.json: /home/coskun/GitHub/CapCalc/linux/Luncher/src/node_modules/edge/src/CoreCLREmbedding/project.json FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /home/coskun/GitHub/CapCalc/linux/Luncher/src/node_modules/edge/build/$(BUILDTYPE)/project.json
/home/coskun/GitHub/CapCalc/linux/Luncher/src/node_modules/edge/build/$(BUILDTYPE)/project.lock.json: TOOLSET := $(TOOLSET)
/home/coskun/GitHub/CapCalc/linux/Luncher/src/node_modules/edge/build/$(BUILDTYPE)/project.lock.json: /home/coskun/GitHub/CapCalc/linux/Luncher/src/node_modules/edge/src/CoreCLREmbedding/project.lock.json FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /home/coskun/GitHub/CapCalc/linux/Luncher/src/node_modules/edge/build/$(BUILDTYPE)/project.lock.json
binding_gyp_build_managed_target_copies = /home/coskun/GitHub/CapCalc/linux/Luncher/src/node_modules/edge/build/$(BUILDTYPE)/CoreCLREmbedding.dll /home/coskun/GitHub/CapCalc/linux/Luncher/src/node_modules/edge/build/$(BUILDTYPE)/project.json /home/coskun/GitHub/CapCalc/linux/Luncher/src/node_modules/edge/build/$(BUILDTYPE)/project.lock.json

### Rules for final target.
# Build our special outputs first.
$(obj).target/build_managed.stamp: | $(action_binding_gyp_build_managed_target_restore_packages_outputs) $(action_binding_gyp_build_managed_target_compile_coreclr_embed_outputs) $(action_binding_gyp_build_managed_target_compile_mono_embed_outputs) $(binding_gyp_build_managed_target_copies)

# Preserve order dependency of special output on deps.
$(action_binding_gyp_build_managed_target_restore_packages_outputs) $(action_binding_gyp_build_managed_target_compile_coreclr_embed_outputs) $(action_binding_gyp_build_managed_target_compile_mono_embed_outputs) $(binding_gyp_build_managed_target_copies): | $(builddir)/edge_nativeclr.node $(builddir)/edge_coreclr.node

$(obj).target/build_managed.stamp: TOOLSET := $(TOOLSET)
$(obj).target/build_managed.stamp: $(builddir)/edge_nativeclr.node $(builddir)/edge_coreclr.node FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/build_managed.stamp
# Add target alias
.PHONY: build_managed
build_managed: $(obj).target/build_managed.stamp

# Add target alias to "all" target.
.PHONY: all
all: build_managed

